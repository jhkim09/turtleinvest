{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\newsh\\\\test-project\\\\eap-service\\\\frontend\\\\src\\\\components\\\\Notifications\\\\NotificationBell.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationBell = ({\n  userRole\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (userRole === 'counselor' || userRole === 'super-admin') {\n      fetchUnreadCount();\n      // 30초마다 읽지 않은 알림 수 확인\n      const interval = setInterval(fetchUnreadCount, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [userRole]);\n  const fetchUnreadCount = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:3000/api/notifications/unread-count', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        setUnreadCount(response.data.unreadCount);\n      }\n    } catch (error) {\n      console.error('읽지 않은 알림 수 조회 오류:', error);\n    }\n  };\n  const fetchNotifications = async () => {\n    if (loading) return;\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:3000/api/notifications?limit=10', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n      }\n    } catch (error) {\n      console.error('알림 목록 조회 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`http://localhost:3000/api/notifications/${notificationId}/read`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(prev => prev.map(notif => notif._id === notificationId ? {\n        ...notif,\n        isRead: true\n      } : notif));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('알림 읽음 처리 오류:', error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:3000/api/notifications/mark-all-read', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(prev => prev.map(notif => ({\n        ...notif,\n        isRead: true\n      })));\n      setUnreadCount(0);\n    } catch (error) {\n      console.error('모든 알림 읽음 처리 오류:', error);\n    }\n  };\n  const handleBellClick = () => {\n    setShowDropdown(!showDropdown);\n    if (!showDropdown) {\n      fetchNotifications();\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'dispute_submitted':\n        return '⚠️';\n      case 'dispute_resolved':\n        return '✅';\n      case 'assignment_new':\n        return '📋';\n      case 'payment_processed':\n        return '💰';\n      case 'system_announcement':\n        return '📢';\n      default:\n        return '🔔';\n    }\n  };\n  const formatTimeAgo = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n    if (diffInMinutes < 1) return '방금 전';\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}시간 전`;\n    return `${Math.floor(diffInMinutes / 1440)}일 전`;\n  };\n\n  // 상담사나 Super Admin이 아니면 알림 벨 표시하지 않음\n  if (userRole !== 'counselor' && userRole !== 'super-admin') {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBellClick,\n      style: {\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer',\n        position: 'relative',\n        padding: '8px',\n        borderRadius: '50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '20px'\n      },\n      children: [\"\\uD83D\\uDD14\", unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          top: '2px',\n          right: '2px',\n          backgroundColor: '#f44336',\n          color: 'white',\n          borderRadius: '50%',\n          fontSize: '11px',\n          padding: '2px 6px',\n          minWidth: '18px',\n          height: '18px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: unreadCount > 99 ? '99+' : unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '100%',\n        right: '0',\n        backgroundColor: 'white',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n        width: '350px',\n        maxHeight: '400px',\n        overflowY: 'auto',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '15px',\n          borderBottom: '1px solid #eee',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: 0,\n            fontSize: '16px',\n            color: '#333'\n          },\n          children: \"\\uC54C\\uB9BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: markAllAsRead,\n          style: {\n            background: 'none',\n            border: 'none',\n            color: '#1976d2',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uBAA8\\uB450 \\uC77D\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '20px',\n            textAlign: 'center',\n            color: '#666'\n          },\n          children: \"\\uB85C\\uB529 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '20px',\n            textAlign: 'center',\n            color: '#666'\n          },\n          children: \"\\uC0C8\\uB85C\\uC6B4 \\uC54C\\uB9BC\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => !notification.isRead && markAsRead(notification._id),\n          style: {\n            padding: '12px 15px',\n            borderBottom: '1px solid #f0f0f0',\n            cursor: notification.isRead ? 'default' : 'pointer',\n            backgroundColor: notification.isRead ? 'white' : '#f8f9ff',\n            ':hover': {\n              backgroundColor: notification.isRead ? '#f8f9fa' : '#f0f2ff'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'flex-start',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '16px',\n                flexShrink: 0\n              },\n              children: getNotificationIcon(notification.type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1,\n                minWidth: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: notification.isRead ? 'normal' : 'bold',\n                  fontSize: '13px',\n                  color: '#333',\n                  marginBottom: '4px'\n                },\n                children: notification.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#666',\n                  lineHeight: '1.3',\n                  marginBottom: '4px',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  display: '-webkit-box',\n                  WebkitLineClamp: 2,\n                  WebkitBoxOrient: 'vertical'\n                },\n                children: notification.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '11px',\n                  color: '#999',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatTimeAgo(notification.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 25\n                }, this), notification.sender && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"by \", notification.sender.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '8px',\n                height: '8px',\n                borderRadius: '50%',\n                backgroundColor: '#1976d2',\n                flexShrink: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this)\n        }, notification._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px 15px',\n          textAlign: 'center',\n          borderTop: '1px solid #eee'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowDropdown(false);\n            // 전체 알림 페이지로 이동하는 로직 추가 가능\n          },\n          style: {\n            background: 'none',\n            border: 'none',\n            color: '#1976d2',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uBAA8\\uB4E0 \\uC54C\\uB9BC \\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 999\n      },\n      onClick: () => setShowDropdown(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationBell, \"qerf+TptEzVFrKGQBFDxt2do/TM=\");\n_c = NotificationBell;\nexport default NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NotificationBell","userRole","_s","notifications","setNotifications","unreadCount","setUnreadCount","showDropdown","setShowDropdown","loading","setLoading","fetchUnreadCount","interval","setInterval","clearInterval","token","localStorage","getItem","response","get","headers","Authorization","data","success","error","console","fetchNotifications","markAsRead","notificationId","put","prev","map","notif","_id","isRead","Math","max","markAllAsRead","handleBellClick","getNotificationIcon","type","formatTimeAgo","dateString","date","Date","now","diffInMinutes","floor","getTime","style","position","display","children","onClick","background","border","cursor","padding","borderRadius","alignItems","justifyContent","fontSize","top","right","backgroundColor","color","minWidth","height","fileName","_jsxFileName","lineNumber","columnNumber","boxShadow","width","maxHeight","overflowY","zIndex","borderBottom","margin","textAlign","length","notification","gap","flexShrink","flex","fontWeight","marginBottom","title","lineHeight","overflow","textOverflow","WebkitLineClamp","WebkitBoxOrient","message","createdAt","sender","name","borderTop","left","bottom","_c","$RefreshReg$"],"sources":["C:/Users/newsh/test-project/eap-service/frontend/src/components/Notifications/NotificationBell.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface Notification {\n  _id: string;\n  type: string;\n  title: string;\n  message: string;\n  isRead: boolean;\n  createdAt: string;\n  sender?: {\n    name: string;\n    role: string;\n  };\n  data?: any;\n}\n\ninterface NotificationBellProps {\n  userRole: string;\n}\n\nconst NotificationBell: React.FC<NotificationBellProps> = ({ userRole }) => {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (userRole === 'counselor' || userRole === 'super-admin') {\n      fetchUnreadCount();\n      // 30초마다 읽지 않은 알림 수 확인\n      const interval = setInterval(fetchUnreadCount, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [userRole]);\n\n  const fetchUnreadCount = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:3000/api/notifications/unread-count', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (response.data.success) {\n        setUnreadCount(response.data.unreadCount);\n      }\n    } catch (error) {\n      console.error('읽지 않은 알림 수 조회 오류:', error);\n    }\n  };\n\n  const fetchNotifications = async () => {\n    if (loading) return;\n    \n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:3000/api/notifications?limit=10', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n      }\n    } catch (error) {\n      console.error('알림 목록 조회 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const markAsRead = async (notificationId: string) => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`http://localhost:3000/api/notifications/${notificationId}/read`, {}, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      setNotifications(prev => prev.map(notif =>\n        notif._id === notificationId ? { ...notif, isRead: true } : notif\n      ));\n      \n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('알림 읽음 처리 오류:', error);\n    }\n  };\n\n  const markAllAsRead = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:3000/api/notifications/mark-all-read', {}, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      setNotifications(prev => prev.map(notif => ({ ...notif, isRead: true })));\n      setUnreadCount(0);\n    } catch (error) {\n      console.error('모든 알림 읽음 처리 오류:', error);\n    }\n  };\n\n  const handleBellClick = () => {\n    setShowDropdown(!showDropdown);\n    if (!showDropdown) {\n      fetchNotifications();\n    }\n  };\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'dispute_submitted':\n        return '⚠️';\n      case 'dispute_resolved':\n        return '✅';\n      case 'assignment_new':\n        return '📋';\n      case 'payment_processed':\n        return '💰';\n      case 'system_announcement':\n        return '📢';\n      default:\n        return '🔔';\n    }\n  };\n\n  const formatTimeAgo = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return '방금 전';\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}시간 전`;\n    return `${Math.floor(diffInMinutes / 1440)}일 전`;\n  };\n\n  // 상담사나 Super Admin이 아니면 알림 벨 표시하지 않음\n  if (userRole !== 'counselor' && userRole !== 'super-admin') {\n    return null;\n  }\n\n  return (\n    <div style={{ position: 'relative', display: 'inline-block' }}>\n      {/* 알림 벨 */}\n      <button\n        onClick={handleBellClick}\n        style={{\n          background: 'none',\n          border: 'none',\n          cursor: 'pointer',\n          position: 'relative',\n          padding: '8px',\n          borderRadius: '50%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '20px'\n        }}\n      >\n        🔔\n        {unreadCount > 0 && (\n          <span style={{\n            position: 'absolute',\n            top: '2px',\n            right: '2px',\n            backgroundColor: '#f44336',\n            color: 'white',\n            borderRadius: '50%',\n            fontSize: '11px',\n            padding: '2px 6px',\n            minWidth: '18px',\n            height: '18px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}>\n            {unreadCount > 99 ? '99+' : unreadCount}\n          </span>\n        )}\n      </button>\n\n      {/* 알림 드롭다운 */}\n      {showDropdown && (\n        <div style={{\n          position: 'absolute',\n          top: '100%',\n          right: '0',\n          backgroundColor: 'white',\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          width: '350px',\n          maxHeight: '400px',\n          overflowY: 'auto',\n          zIndex: 1000\n        }}>\n          {/* 헤더 */}\n          <div style={{\n            padding: '15px',\n            borderBottom: '1px solid #eee',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}>\n            <h4 style={{ margin: 0, fontSize: '16px', color: '#333' }}>알림</h4>\n            {unreadCount > 0 && (\n              <button\n                onClick={markAllAsRead}\n                style={{\n                  background: 'none',\n                  border: 'none',\n                  color: '#1976d2',\n                  cursor: 'pointer',\n                  fontSize: '12px'\n                }}\n              >\n                모두 읽음\n              </button>\n            )}\n          </div>\n\n          {/* 알림 목록 */}\n          <div>\n            {loading ? (\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                로딩 중...\n              </div>\n            ) : notifications.length === 0 ? (\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                새로운 알림이 없습니다.\n              </div>\n            ) : (\n              notifications.map((notification) => (\n                <div\n                  key={notification._id}\n                  onClick={() => !notification.isRead && markAsRead(notification._id)}\n                  style={{\n                    padding: '12px 15px',\n                    borderBottom: '1px solid #f0f0f0',\n                    cursor: notification.isRead ? 'default' : 'pointer',\n                    backgroundColor: notification.isRead ? 'white' : '#f8f9ff',\n                    ':hover': {\n                      backgroundColor: notification.isRead ? '#f8f9fa' : '#f0f2ff'\n                    }\n                  }}\n                >\n                  <div style={{ display: 'flex', alignItems: 'flex-start', gap: '10px' }}>\n                    <span style={{ fontSize: '16px', flexShrink: 0 }}>\n                      {getNotificationIcon(notification.type)}\n                    </span>\n                    <div style={{ flex: 1, minWidth: 0 }}>\n                      <div style={{\n                        fontWeight: notification.isRead ? 'normal' : 'bold',\n                        fontSize: '13px',\n                        color: '#333',\n                        marginBottom: '4px'\n                      }}>\n                        {notification.title}\n                      </div>\n                      <div style={{\n                        fontSize: '12px',\n                        color: '#666',\n                        lineHeight: '1.3',\n                        marginBottom: '4px',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        display: '-webkit-box',\n                        WebkitLineClamp: 2,\n                        WebkitBoxOrient: 'vertical'\n                      }}>\n                        {notification.message}\n                      </div>\n                      <div style={{\n                        fontSize: '11px',\n                        color: '#999',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      }}>\n                        <span>{formatTimeAgo(notification.createdAt)}</span>\n                        {notification.sender && (\n                          <span>by {notification.sender.name}</span>\n                        )}\n                      </div>\n                    </div>\n                    {!notification.isRead && (\n                      <div style={{\n                        width: '8px',\n                        height: '8px',\n                        borderRadius: '50%',\n                        backgroundColor: '#1976d2',\n                        flexShrink: 0\n                      }} />\n                    )}\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n\n          {/* 푸터 */}\n          {notifications.length > 0 && (\n            <div style={{\n              padding: '10px 15px',\n              textAlign: 'center',\n              borderTop: '1px solid #eee'\n            }}>\n              <button\n                onClick={() => {\n                  setShowDropdown(false);\n                  // 전체 알림 페이지로 이동하는 로직 추가 가능\n                }}\n                style={{\n                  background: 'none',\n                  border: 'none',\n                  color: '#1976d2',\n                  cursor: 'pointer',\n                  fontSize: '12px'\n                }}\n              >\n                모든 알림 보기\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 드롭다운 외부 클릭 시 닫기 */}\n      {showDropdown && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 999\n          }}\n          onClick={() => setShowDropdown(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NotificationBell;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}